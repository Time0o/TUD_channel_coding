#!/usr/bin/env python3

import os
import re
import subprocess
import sys

def to_bin_str(exponents):
    degree = max(exponents)

    bin_str = ''
    for e in range(degree, -1, -1):
       bin_str += '1' if e in exponents else '0'

    return bin_str

if __name__ == '__main__':
    print('creating benchmarks...')

    control_matrices = sys.argv[1]
    benchmark_basedir = sys.argv[2]

    r = r'^(\d+)\s+(\d+)\s+(\d+)\s+:\s+((?:\d+\s+)*\d+)\s+(ortho|nonortho)$'

    with open(control_matrices, encoding='utf-8') as f:
        for line in f:
            if line == '\n' or line.startswith('#'):
                continue

            m = re.match(r, line[:-1])
            n, l, dmin, h_exp, ortho = m.groups()
            h = to_bin_str([int(e) for e in h_exp.split()])

            benchmark_dir = os.path.join(
                benchmark_basedir, '{}_{}_{}_{}'.format(n, l, dmin, ortho))

            if not os.path.exists(benchmark_dir):
                os.makedirs(benchmark_dir)

            subprocess.call(['bin/testbench', n, l, dmin, h, ortho, benchmark_dir])
